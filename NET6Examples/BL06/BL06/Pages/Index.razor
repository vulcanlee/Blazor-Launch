@page "/"

<h1>Hello, StateHasChanged!</h1>

<div>
    <button class="btn btn-primary" @onclick="定時更新">定時更新</button>
</div>
<h3 class="text-danger">@message</h3>
<br />
@WatchRender

@code{
    #region 使用這個 RenderFragment 可以觀察到 渲染 行為是否正在發生
    RenderFragment WatchRender = builder =>
    {
        Console.WriteLine("正在 Render 中");
    };
    #endregion
    string message = "";
    int counter = 0;
    void 定時更新()
    {
        message = "啟動定時更新訊息";
        var task = Task.Run(async () =>
        {
            while (true)
            {
                await Task.Delay(2000);
                message = $"計數器數值 : {++counter}";
                await InvokeAsync(() =>
                {
                    StateHasChanged();
                });
            }
        });
    }
}
